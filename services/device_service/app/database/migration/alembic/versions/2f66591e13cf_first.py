"""first

Revision ID: 2f66591e13cf
Revises: 
Create Date: 2023-03-07 14:20:07.302384

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils



# revision identifiers, used by Alembic.
revision = '2f66591e13cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('icon_sensors',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('font', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('icons',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('icon'),
    sa.UniqueConstraint('name')
    )
    op.create_table('last_wills',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('topic', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_last_wills_topic'), 'last_wills', ['topic'], unique=True)
    op.create_table('qos',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('qos', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('qos')
    )
    op.create_table('type_devices',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hubs',
    sa.Column('dt_inclusion', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_upgrade', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('user_email', sa.String(length=100), nullable=False),
    sa.Column('hub_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('location_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('last_will_id', sa.Integer(), nullable=True),
    sa.Column('icons_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['icons_id'], ['icons.id'], ),
    sa.ForeignKeyConstraint(['last_will_id'], ['last_wills.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_hub_01', 'hubs', ['name', 'location_uuid'], unique=True)
    op.create_index('idx_hub_02', 'hubs', ['user_email', 'name'], unique=True)
    op.create_index(op.f('ix_hubs_hub_uuid'), 'hubs', ['hub_uuid'], unique=False)
    op.create_index(op.f('ix_hubs_icons_id'), 'hubs', ['icons_id'], unique=False)
    op.create_index(op.f('ix_hubs_location_uuid'), 'hubs', ['location_uuid'], unique=False)
    op.create_index(op.f('ix_hubs_user_email'), 'hubs', ['user_email'], unique=False)
    op.create_table('measures',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('scale', sa.String(length=3), nullable=False),
    sa.Column('icon_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['icon_id'], ['icon_sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_measures_01', 'measures', ['name', 'scale'], unique=True)
    op.create_index(op.f('ix_measures_icon_id'), 'measures', ['icon_id'], unique=False)
    op.create_table('type_actuators',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('icons_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['icons_id'], ['icons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_type_actuators_icons_id'), 'type_actuators', ['icons_id'], unique=False)
    op.create_table('type_sensors',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('max_scale', sa.Integer(), nullable=True),
    sa.Column('min_scale', sa.Integer(), nullable=True),
    sa.Column('measure_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measure_id'], ['measures.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_type_sensors_measure_id'), 'type_sensors', ['measure_id'], unique=False)
    op.create_table('actuators',
    sa.Column('dt_inclusion', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_upgrade', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('actuator_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('command_start', sa.String(length=50), nullable=True),
    sa.Column('command_stop', sa.String(length=50), nullable=True),
    sa.Column('command', sa.String(length=50), nullable=True),
    sa.Column('location_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('hub_id', sa.Integer(), nullable=True),
    sa.Column('last_will_id', sa.Integer(), nullable=True),
    sa.Column('type_actuator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hub_id'], ['hubs.id'], ),
    sa.ForeignKeyConstraint(['last_will_id'], ['last_wills.id'], ),
    sa.ForeignKeyConstraint(['type_actuator_id'], ['type_sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_actuators_actuator_uuid'), 'actuators', ['actuator_uuid'], unique=False)
    op.create_index(op.f('ix_actuators_hub_id'), 'actuators', ['hub_id'], unique=False)
    op.create_index(op.f('ix_actuators_location_uuid'), 'actuators', ['location_uuid'], unique=False)
    op.create_index(op.f('ix_actuators_name'), 'actuators', ['name'], unique=False)
    op.create_index(op.f('ix_actuators_type_actuator_id'), 'actuators', ['type_actuator_id'], unique=False)
    op.create_table('sensors',
    sa.Column('dt_inclusion', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_upgrade', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('user_email', sa.String(length=100), nullable=False),
    sa.Column('sensor_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('location_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('hub_id', sa.Integer(), nullable=True),
    sa.Column('last_will_id', sa.Integer(), nullable=True),
    sa.Column('type_sensor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hub_id'], ['hubs.id'], ),
    sa.ForeignKeyConstraint(['last_will_id'], ['last_wills.id'], ),
    sa.ForeignKeyConstraint(['type_sensor_id'], ['type_sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sensors_01', 'sensors', ['name', 'location_uuid'], unique=True)
    op.create_index('idx_sensors_02', 'sensors', ['name', 'user_email'], unique=True)
    op.create_index(op.f('ix_sensors_hub_id'), 'sensors', ['hub_id'], unique=False)
    op.create_index(op.f('ix_sensors_last_will_id'), 'sensors', ['last_will_id'], unique=False)
    op.create_index(op.f('ix_sensors_location_uuid'), 'sensors', ['location_uuid'], unique=False)
    op.create_index(op.f('ix_sensors_name'), 'sensors', ['name'], unique=False)
    op.create_index(op.f('ix_sensors_sensor_uuid'), 'sensors', ['sensor_uuid'], unique=False)
    op.create_index(op.f('ix_sensors_type_sensor_id'), 'sensors', ['type_sensor_id'], unique=False)
    op.create_index(op.f('ix_sensors_user_email'), 'sensors', ['user_email'], unique=False)
    op.create_table('publishers',
    sa.Column('dt_inclusion', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_upgrade', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('topic', sa.String(length=300), nullable=True),
    sa.Column('qos_id', sa.Integer(), nullable=False),
    sa.Column('retain', sa.Boolean(), nullable=False),
    sa.Column('actuator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['actuator_id'], ['actuators.id'], ),
    sa.ForeignKeyConstraint(['qos_id'], ['qos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_publishers_actuator_id'), 'publishers', ['actuator_id'], unique=False)
    op.create_index(op.f('ix_publishers_topic'), 'publishers', ['topic'], unique=True)
    op.create_table('subscribers',
    sa.Column('dt_inclusion', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('dt_upgrade', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('topic', sa.String(length=300), nullable=True),
    sa.Column('qos_id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['qos_id'], ['qos.id'], ),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscribers_sensor_id'), 'subscribers', ['sensor_id'], unique=False)
    op.create_index(op.f('ix_subscribers_topic'), 'subscribers', ['topic'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subscribers_topic'), table_name='subscribers')
    op.drop_index(op.f('ix_subscribers_sensor_id'), table_name='subscribers')
    op.drop_table('subscribers')
    op.drop_index(op.f('ix_publishers_topic'), table_name='publishers')
    op.drop_index(op.f('ix_publishers_actuator_id'), table_name='publishers')
    op.drop_table('publishers')
    op.drop_index(op.f('ix_sensors_user_email'), table_name='sensors')
    op.drop_index(op.f('ix_sensors_type_sensor_id'), table_name='sensors')
    op.drop_index(op.f('ix_sensors_sensor_uuid'), table_name='sensors')
    op.drop_index(op.f('ix_sensors_name'), table_name='sensors')
    op.drop_index(op.f('ix_sensors_location_uuid'), table_name='sensors')
    op.drop_index(op.f('ix_sensors_last_will_id'), table_name='sensors')
    op.drop_index(op.f('ix_sensors_hub_id'), table_name='sensors')
    op.drop_index('idx_sensors_02', table_name='sensors')
    op.drop_index('idx_sensors_01', table_name='sensors')
    op.drop_table('sensors')
    op.drop_index(op.f('ix_actuators_type_actuator_id'), table_name='actuators')
    op.drop_index(op.f('ix_actuators_name'), table_name='actuators')
    op.drop_index(op.f('ix_actuators_location_uuid'), table_name='actuators')
    op.drop_index(op.f('ix_actuators_hub_id'), table_name='actuators')
    op.drop_index(op.f('ix_actuators_actuator_uuid'), table_name='actuators')
    op.drop_table('actuators')
    op.drop_index(op.f('ix_type_sensors_measure_id'), table_name='type_sensors')
    op.drop_table('type_sensors')
    op.drop_index(op.f('ix_type_actuators_icons_id'), table_name='type_actuators')
    op.drop_table('type_actuators')
    op.drop_index(op.f('ix_measures_icon_id'), table_name='measures')
    op.drop_index('idx_measures_01', table_name='measures')
    op.drop_table('measures')
    op.drop_index(op.f('ix_hubs_user_email'), table_name='hubs')
    op.drop_index(op.f('ix_hubs_location_uuid'), table_name='hubs')
    op.drop_index(op.f('ix_hubs_icons_id'), table_name='hubs')
    op.drop_index(op.f('ix_hubs_hub_uuid'), table_name='hubs')
    op.drop_index('idx_hub_02', table_name='hubs')
    op.drop_index('idx_hub_01', table_name='hubs')
    op.drop_table('hubs')
    op.drop_table('type_devices')
    op.drop_table('qos')
    op.drop_index(op.f('ix_last_wills_topic'), table_name='last_wills')
    op.drop_table('last_wills')
    op.drop_table('icons')
    op.drop_table('icon_sensors')
    # ### end Alembic commands ###
