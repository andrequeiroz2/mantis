version: "3.8"

services:

  db_user:
    image: postgres:15.1
    container_name: db_user
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "user"
    ports:
      - "15432:5432"
    volumes:
      - db_user:/var/lib/postgresql/data
      - ./user_service/app/database/script_db/start.sql:/docker-entrypoint-initdb.d/start.sql
    networks:
      - vpc-back

  db_device:
    image: postgres:15.1
    container_name: db_device
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "devices"
    ports:
      - "15433:5432"
    volumes:
      - db_device:/var/lib/postgresql/data
#      - ./user_service/app/database/script_db/start.sql:/docker-entrypoint-initdb.d/start.sql
    networks:
      - vpc-back


  nginx:
    image: nginx:1.22
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - user_service
    volumes:
      - ./nginx_service/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - vpc-back

  user_service:
    image: service/user_service
    container_name: user_service
    restart: unless-stopped
    build:
      context: ./user_service
      dockerfile: Dockerfile
    env_file:
      - user_service/app/.env
    volumes:
      - ./user_service/app:/app
    ports:
      - "8000:8000"
    depends_on:
      - db_user
    networks:
      - vpc-back

networks:
  vpc-back:
    name: vpc-back
    driver: bridge

volumes:
  db_user:
  db_device: